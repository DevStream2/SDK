plugins {
    id 'java-library'
    id 'maven-publish' 
}

group = 'com.github.DziriiTaheni'  
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.json:json:20231013'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'net.java.dev.jna:jna:5.12.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

// Task custom pour générer BuildConfig (OK)
abstract class GenerateBuildConfigTask extends DefaultTask {
    @Input
    abstract Property<String> getBackendUrl()

    @OutputDirectory
    abstract DirectoryProperty getOutputDir()

    @TaskAction
    def generate() {
        def packageName = "org.Analytics"
        def buildConfigDir = outputDir.file("${packageName.replace('.', '/')}").get().asFile
        buildConfigDir.mkdirs()

        new File(buildConfigDir, "BuildConfig.java").text = """
package ${packageName};

public final class BuildConfig {
    public static final String BACKEND_BASE_URL = "${backendUrl.get()}";
}
"""
    }
}

tasks.register('generateBuildConfig', GenerateBuildConfigTask) {
    backendUrl = providers.gradleProperty('backendBaseUrl').orElse("http://192.168.1.216:3000")
    outputDir = layout.buildDirectory.dir("generated/sources/buildConfig/java/main")
}

compileJava {
    dependsOn generateBuildConfig
}

sourceSets {
    main {
        java {
            srcDirs += tasks.named('generateBuildConfig').get().outputDir
        }
    }
}

// Optional, you can keep or remove this publishing block
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.github.DziriiTaheni' 
            artifactId = 'SDK_Analytics'       
            version = '1.0.0'
        }
    }
}

testing {
    suites {
        test {
            useJUnit('4.13.2')
        }
    }
}
